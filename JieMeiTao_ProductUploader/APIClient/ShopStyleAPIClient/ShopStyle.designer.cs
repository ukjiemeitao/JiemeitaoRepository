#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopStyleAPIClient
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Catalog")]
	public partial class CatalogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSS_Brand(SS_Brand instance);
    partial void UpdateSS_Brand(SS_Brand instance);
    partial void DeleteSS_Brand(SS_Brand instance);
    partial void InsertSS_Brand_Synonym(SS_Brand_Synonym instance);
    partial void UpdateSS_Brand_Synonym(SS_Brand_Synonym instance);
    partial void DeleteSS_Brand_Synonym(SS_Brand_Synonym instance);
    partial void InsertSS_Category(SS_Category instance);
    partial void UpdateSS_Category(SS_Category instance);
    partial void DeleteSS_Category(SS_Category instance);
    partial void InsertSS_Color(SS_Color instance);
    partial void UpdateSS_Color(SS_Color instance);
    partial void DeleteSS_Color(SS_Color instance);
    partial void InsertSS_Image(SS_Image instance);
    partial void UpdateSS_Image(SS_Image instance);
    partial void DeleteSS_Image(SS_Image instance);
    partial void InsertSS_Product(SS_Product instance);
    partial void UpdateSS_Product(SS_Product instance);
    partial void DeleteSS_Product(SS_Product instance);
    partial void InsertSS_Product_Category_Mapping(SS_Product_Category_Mapping instance);
    partial void UpdateSS_Product_Category_Mapping(SS_Product_Category_Mapping instance);
    partial void DeleteSS_Product_Category_Mapping(SS_Product_Category_Mapping instance);
    partial void InsertSS_Product_Color_Image_Mapping(SS_Product_Color_Image_Mapping instance);
    partial void UpdateSS_Product_Color_Image_Mapping(SS_Product_Color_Image_Mapping instance);
    partial void DeleteSS_Product_Color_Image_Mapping(SS_Product_Color_Image_Mapping instance);
    partial void InsertSS_Product_Size_Mapping(SS_Product_Size_Mapping instance);
    partial void UpdateSS_Product_Size_Mapping(SS_Product_Size_Mapping instance);
    partial void DeleteSS_Product_Size_Mapping(SS_Product_Size_Mapping instance);
    partial void InsertSS_Retailer(SS_Retailer instance);
    partial void UpdateSS_Retailer(SS_Retailer instance);
    partial void DeleteSS_Retailer(SS_Retailer instance);
    partial void InsertSS_Size(SS_Size instance);
    partial void UpdateSS_Size(SS_Size instance);
    partial void DeleteSS_Size(SS_Size instance);
    #endregion
		
		public CatalogDataContext() : 
				base(global::ShopStyleAPIClient.Properties.Settings.Default.CatalogConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CatalogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SS_Brand> SS_Brands
		{
			get
			{
				return this.GetTable<SS_Brand>();
			}
		}
		
		public System.Data.Linq.Table<SS_Brand_Synonym> SS_Brand_Synonyms
		{
			get
			{
				return this.GetTable<SS_Brand_Synonym>();
			}
		}
		
		public System.Data.Linq.Table<SS_Category> SS_Categories
		{
			get
			{
				return this.GetTable<SS_Category>();
			}
		}
		
		public System.Data.Linq.Table<SS_Color> SS_Colors
		{
			get
			{
				return this.GetTable<SS_Color>();
			}
		}
		
		public System.Data.Linq.Table<SS_Image> SS_Images
		{
			get
			{
				return this.GetTable<SS_Image>();
			}
		}
		
		public System.Data.Linq.Table<SS_Product> SS_Products
		{
			get
			{
				return this.GetTable<SS_Product>();
			}
		}
		
		public System.Data.Linq.Table<SS_Product_Category_Mapping> SS_Product_Category_Mappings
		{
			get
			{
				return this.GetTable<SS_Product_Category_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<SS_Product_Color_Image_Mapping> SS_Product_Color_Image_Mappings
		{
			get
			{
				return this.GetTable<SS_Product_Color_Image_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<SS_Product_Size_Mapping> SS_Product_Size_Mappings
		{
			get
			{
				return this.GetTable<SS_Product_Size_Mapping>();
			}
		}
		
		public System.Data.Linq.Table<SS_Retailer> SS_Retailers
		{
			get
			{
				return this.GetTable<SS_Retailer>();
			}
		}
		
		public System.Data.Linq.Table<SS_Size> SS_Sizes
		{
			get
			{
				return this.GetTable<SS_Size>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Brand")]
	public partial class SS_Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _brand_id;
		
		private string _brand_name;
		
		private string _url;
		
		private EntitySet<SS_Brand_Synonym> _SS_Brand_Synonyms;
		
		private EntitySet<SS_Product> _SS_Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onbrand_idChanging(long value);
    partial void Onbrand_idChanged();
    partial void Onbrand_nameChanging(string value);
    partial void Onbrand_nameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public SS_Brand()
		{
			this._SS_Brand_Synonyms = new EntitySet<SS_Brand_Synonym>(new Action<SS_Brand_Synonym>(this.attach_SS_Brand_Synonyms), new Action<SS_Brand_Synonym>(this.detach_SS_Brand_Synonyms));
			this._SS_Products = new EntitySet<SS_Product>(new Action<SS_Product>(this.attach_SS_Products), new Action<SS_Product>(this.detach_SS_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="BigInt NOT NULL")]
		public long brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_name", DbType="NVarChar(100)")]
		public string brand_name
		{
			get
			{
				return this._brand_name;
			}
			set
			{
				if ((this._brand_name != value))
				{
					this.Onbrand_nameChanging(value);
					this.SendPropertyChanging();
					this._brand_name = value;
					this.SendPropertyChanged("brand_name");
					this.Onbrand_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(300)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Brand_SS_Brand_Synonym", Storage="_SS_Brand_Synonyms", ThisKey="brand_id", OtherKey="brand_id")]
		public EntitySet<SS_Brand_Synonym> SS_Brand_Synonyms
		{
			get
			{
				return this._SS_Brand_Synonyms;
			}
			set
			{
				this._SS_Brand_Synonyms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Brand_SS_Product", Storage="_SS_Products", ThisKey="brand_id", OtherKey="brand_id")]
		public EntitySet<SS_Product> SS_Products
		{
			get
			{
				return this._SS_Products;
			}
			set
			{
				this._SS_Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SS_Brand_Synonyms(SS_Brand_Synonym entity)
		{
			this.SendPropertyChanging();
			entity.SS_Brand = this;
		}
		
		private void detach_SS_Brand_Synonyms(SS_Brand_Synonym entity)
		{
			this.SendPropertyChanging();
			entity.SS_Brand = null;
		}
		
		private void attach_SS_Products(SS_Product entity)
		{
			this.SendPropertyChanging();
			entity.SS_Brand = this;
		}
		
		private void detach_SS_Products(SS_Product entity)
		{
			this.SendPropertyChanging();
			entity.SS_Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Brand_Synonyms")]
	public partial class SS_Brand_Synonym : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _brand_id;
		
		private string _synonyms_name;
		
		private EntityRef<SS_Brand> _SS_Brand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onbrand_idChanging(long value);
    partial void Onbrand_idChanged();
    partial void Onsynonyms_nameChanging(string value);
    partial void Onsynonyms_nameChanged();
    #endregion
		
		public SS_Brand_Synonym()
		{
			this._SS_Brand = default(EntityRef<SS_Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="BigInt NOT NULL")]
		public long brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					if (this._SS_Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_synonyms_name", DbType="NVarChar(100)")]
		public string synonyms_name
		{
			get
			{
				return this._synonyms_name;
			}
			set
			{
				if ((this._synonyms_name != value))
				{
					this.Onsynonyms_nameChanging(value);
					this.SendPropertyChanging();
					this._synonyms_name = value;
					this.SendPropertyChanged("synonyms_name");
					this.Onsynonyms_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Brand_SS_Brand_Synonym", Storage="_SS_Brand", ThisKey="brand_id", OtherKey="brand_id", IsForeignKey=true)]
		public SS_Brand SS_Brand
		{
			get
			{
				return this._SS_Brand.Entity;
			}
			set
			{
				SS_Brand previousValue = this._SS_Brand.Entity;
				if (((previousValue != value) 
							|| (this._SS_Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Brand.Entity = null;
						previousValue.SS_Brand_Synonyms.Remove(this);
					}
					this._SS_Brand.Entity = value;
					if ((value != null))
					{
						value.SS_Brand_Synonyms.Add(this);
						this._brand_id = value.brand_id;
					}
					else
					{
						this._brand_id = default(long);
					}
					this.SendPropertyChanged("SS_Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Category")]
	public partial class SS_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _cat_id;
		
		private string _localizedid;
		
		private string _shortname;
		
		private string _name;
		
		private string _parentid;
		
		private EntitySet<SS_Product_Category_Mapping> _SS_Product_Category_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Oncat_idChanging(string value);
    partial void Oncat_idChanged();
    partial void OnlocalizedidChanging(string value);
    partial void OnlocalizedidChanged();
    partial void OnshortnameChanging(string value);
    partial void OnshortnameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnparentidChanging(string value);
    partial void OnparentidChanged();
    #endregion
		
		public SS_Category()
		{
			this._SS_Product_Category_Mappings = new EntitySet<SS_Product_Category_Mapping>(new Action<SS_Product_Category_Mapping>(this.attach_SS_Product_Category_Mappings), new Action<SS_Product_Category_Mapping>(this.detach_SS_Product_Category_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localizedid", DbType="NVarChar(100)")]
		public string localizedid
		{
			get
			{
				return this._localizedid;
			}
			set
			{
				if ((this._localizedid != value))
				{
					this.OnlocalizedidChanging(value);
					this.SendPropertyChanging();
					this._localizedid = value;
					this.SendPropertyChanged("localizedid");
					this.OnlocalizedidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortname", DbType="NVarChar(80)")]
		public string shortname
		{
			get
			{
				return this._shortname;
			}
			set
			{
				if ((this._shortname != value))
				{
					this.OnshortnameChanging(value);
					this.SendPropertyChanging();
					this._shortname = value;
					this.SendPropertyChanged("shortname");
					this.OnshortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="NVarChar(100)")]
		public string parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Category_SS_Product_Category_Mapping", Storage="_SS_Product_Category_Mappings", ThisKey="cat_id", OtherKey="cat_id")]
		public EntitySet<SS_Product_Category_Mapping> SS_Product_Category_Mappings
		{
			get
			{
				return this._SS_Product_Category_Mappings;
			}
			set
			{
				this._SS_Product_Category_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SS_Product_Category_Mappings(SS_Product_Category_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Category = this;
		}
		
		private void detach_SS_Product_Category_Mappings(SS_Product_Category_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Color")]
	public partial class SS_Color : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<long> _color_id;
		
		private string _color_name;
		
		private string _url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Oncolor_idChanging(System.Nullable<long> value);
    partial void Oncolor_idChanged();
    partial void Oncolor_nameChanging(string value);
    partial void Oncolor_nameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public SS_Color()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_id", DbType="BigInt")]
		public System.Nullable<long> color_id
		{
			get
			{
				return this._color_id;
			}
			set
			{
				if ((this._color_id != value))
				{
					this.Oncolor_idChanging(value);
					this.SendPropertyChanging();
					this._color_id = value;
					this.SendPropertyChanged("color_id");
					this.Oncolor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_name", DbType="NVarChar(50)")]
		public string color_name
		{
			get
			{
				return this._color_name;
			}
			set
			{
				if ((this._color_name != value))
				{
					this.Oncolor_nameChanging(value);
					this.SendPropertyChanging();
					this._color_name = value;
					this.SendPropertyChanged("color_name");
					this.Oncolor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(300)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Images")]
	public partial class SS_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _image_id;
		
		private string _size_name;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _height;
		
		private string _url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onimage_idChanging(string value);
    partial void Onimage_idChanged();
    partial void Onsize_nameChanging(string value);
    partial void Onsize_nameChanged();
    partial void OnwidthChanging(System.Nullable<int> value);
    partial void OnwidthChanged();
    partial void OnheightChanging(System.Nullable<int> value);
    partial void OnheightChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    #endregion
		
		public SS_Image()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="NVarChar(50)")]
		public string image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_name", DbType="NVarChar(30)")]
		public string size_name
		{
			get
			{
				return this._size_name;
			}
			set
			{
				if ((this._size_name != value))
				{
					this.Onsize_nameChanging(value);
					this.SendPropertyChanging();
					this._size_name = value;
					this.SendPropertyChanged("size_name");
					this.Onsize_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int")]
		public System.Nullable<int> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(300)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Product")]
	public partial class SS_Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _product_id;
		
		private string _name;
		
		private string _currency;
		
		private System.Nullable<decimal> _price;
		
		private string _price_label;
		
		private System.Nullable<decimal> _sale_price;
		
		private string _sale_price_label;
		
		private System.Nullable<bool> _in_stock;
		
		private System.Nullable<long> _retailer_id;
		
		private string _locale;
		
		private string _description;
		
		private System.Nullable<long> _brand_id;
		
		private string _click_url;
		
		private string _page_url;
		
		private string _image_id;
		
		private EntitySet<SS_Product_Category_Mapping> _SS_Product_Category_Mappings;
		
		private EntitySet<SS_Product_Color_Image_Mapping> _SS_Product_Color_Image_Mappings;
		
		private EntitySet<SS_Product_Size_Mapping> _SS_Product_Size_Mappings;
		
		private EntityRef<SS_Brand> _SS_Brand;
		
		private EntityRef<SS_Retailer> _SS_Retailer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Onprice_labelChanging(string value);
    partial void Onprice_labelChanged();
    partial void Onsale_priceChanging(System.Nullable<decimal> value);
    partial void Onsale_priceChanged();
    partial void Onsale_price_labelChanging(string value);
    partial void Onsale_price_labelChanged();
    partial void Onin_stockChanging(System.Nullable<bool> value);
    partial void Onin_stockChanged();
    partial void Onretailer_idChanging(System.Nullable<long> value);
    partial void Onretailer_idChanged();
    partial void OnlocaleChanging(string value);
    partial void OnlocaleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onbrand_idChanging(System.Nullable<long> value);
    partial void Onbrand_idChanged();
    partial void Onclick_urlChanging(string value);
    partial void Onclick_urlChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void Onimage_idChanging(string value);
    partial void Onimage_idChanged();
    #endregion
		
		public SS_Product()
		{
			this._SS_Product_Category_Mappings = new EntitySet<SS_Product_Category_Mapping>(new Action<SS_Product_Category_Mapping>(this.attach_SS_Product_Category_Mappings), new Action<SS_Product_Category_Mapping>(this.detach_SS_Product_Category_Mappings));
			this._SS_Product_Color_Image_Mappings = new EntitySet<SS_Product_Color_Image_Mapping>(new Action<SS_Product_Color_Image_Mapping>(this.attach_SS_Product_Color_Image_Mappings), new Action<SS_Product_Color_Image_Mapping>(this.detach_SS_Product_Color_Image_Mappings));
			this._SS_Product_Size_Mappings = new EntitySet<SS_Product_Size_Mapping>(new Action<SS_Product_Size_Mapping>(this.attach_SS_Product_Size_Mappings), new Action<SS_Product_Size_Mapping>(this.detach_SS_Product_Size_Mappings));
			this._SS_Brand = default(EntityRef<SS_Brand>);
			this._SS_Retailer = default(EntityRef<SS_Retailer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL")]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="NVarChar(10)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_label", DbType="NVarChar(20)")]
		public string price_label
		{
			get
			{
				return this._price_label;
			}
			set
			{
				if ((this._price_label != value))
				{
					this.Onprice_labelChanging(value);
					this.SendPropertyChanging();
					this._price_label = value;
					this.SendPropertyChanged("price_label");
					this.Onprice_labelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> sale_price
		{
			get
			{
				return this._sale_price;
			}
			set
			{
				if ((this._sale_price != value))
				{
					this.Onsale_priceChanging(value);
					this.SendPropertyChanging();
					this._sale_price = value;
					this.SendPropertyChanged("sale_price");
					this.Onsale_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_price_label", DbType="NVarChar(20)")]
		public string sale_price_label
		{
			get
			{
				return this._sale_price_label;
			}
			set
			{
				if ((this._sale_price_label != value))
				{
					this.Onsale_price_labelChanging(value);
					this.SendPropertyChanging();
					this._sale_price_label = value;
					this.SendPropertyChanged("sale_price_label");
					this.Onsale_price_labelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_stock", DbType="Bit")]
		public System.Nullable<bool> in_stock
		{
			get
			{
				return this._in_stock;
			}
			set
			{
				if ((this._in_stock != value))
				{
					this.Onin_stockChanging(value);
					this.SendPropertyChanging();
					this._in_stock = value;
					this.SendPropertyChanged("in_stock");
					this.Onin_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retailer_id", DbType="BigInt")]
		public System.Nullable<long> retailer_id
		{
			get
			{
				return this._retailer_id;
			}
			set
			{
				if ((this._retailer_id != value))
				{
					if (this._SS_Retailer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onretailer_idChanging(value);
					this.SendPropertyChanging();
					this._retailer_id = value;
					this.SendPropertyChanged("retailer_id");
					this.Onretailer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locale", DbType="NVarChar(50)")]
		public string locale
		{
			get
			{
				return this._locale;
			}
			set
			{
				if ((this._locale != value))
				{
					this.OnlocaleChanging(value);
					this.SendPropertyChanging();
					this._locale = value;
					this.SendPropertyChanged("locale");
					this.OnlocaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="BigInt")]
		public System.Nullable<long> brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					if (this._SS_Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_click_url", DbType="NVarChar(300)")]
		public string click_url
		{
			get
			{
				return this._click_url;
			}
			set
			{
				if ((this._click_url != value))
				{
					this.Onclick_urlChanging(value);
					this.SendPropertyChanging();
					this._click_url = value;
					this.SendPropertyChanged("click_url");
					this.Onclick_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_url", DbType="NVarChar(300)")]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="NVarChar(50)")]
		public string image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Category_Mapping", Storage="_SS_Product_Category_Mappings", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<SS_Product_Category_Mapping> SS_Product_Category_Mappings
		{
			get
			{
				return this._SS_Product_Category_Mappings;
			}
			set
			{
				this._SS_Product_Category_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Color_Image_Mapping", Storage="_SS_Product_Color_Image_Mappings", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<SS_Product_Color_Image_Mapping> SS_Product_Color_Image_Mappings
		{
			get
			{
				return this._SS_Product_Color_Image_Mappings;
			}
			set
			{
				this._SS_Product_Color_Image_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Size_Mapping", Storage="_SS_Product_Size_Mappings", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<SS_Product_Size_Mapping> SS_Product_Size_Mappings
		{
			get
			{
				return this._SS_Product_Size_Mappings;
			}
			set
			{
				this._SS_Product_Size_Mappings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Brand_SS_Product", Storage="_SS_Brand", ThisKey="brand_id", OtherKey="brand_id", IsForeignKey=true)]
		public SS_Brand SS_Brand
		{
			get
			{
				return this._SS_Brand.Entity;
			}
			set
			{
				SS_Brand previousValue = this._SS_Brand.Entity;
				if (((previousValue != value) 
							|| (this._SS_Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Brand.Entity = null;
						previousValue.SS_Products.Remove(this);
					}
					this._SS_Brand.Entity = value;
					if ((value != null))
					{
						value.SS_Products.Add(this);
						this._brand_id = value.brand_id;
					}
					else
					{
						this._brand_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("SS_Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Retailer_SS_Product", Storage="_SS_Retailer", ThisKey="retailer_id", OtherKey="retailer_id", IsForeignKey=true)]
		public SS_Retailer SS_Retailer
		{
			get
			{
				return this._SS_Retailer.Entity;
			}
			set
			{
				SS_Retailer previousValue = this._SS_Retailer.Entity;
				if (((previousValue != value) 
							|| (this._SS_Retailer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Retailer.Entity = null;
						previousValue.SS_Products.Remove(this);
					}
					this._SS_Retailer.Entity = value;
					if ((value != null))
					{
						value.SS_Products.Add(this);
						this._retailer_id = value.retailer_id;
					}
					else
					{
						this._retailer_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("SS_Retailer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SS_Product_Category_Mappings(SS_Product_Category_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = this;
		}
		
		private void detach_SS_Product_Category_Mappings(SS_Product_Category_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = null;
		}
		
		private void attach_SS_Product_Color_Image_Mappings(SS_Product_Color_Image_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = this;
		}
		
		private void detach_SS_Product_Color_Image_Mappings(SS_Product_Color_Image_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = null;
		}
		
		private void attach_SS_Product_Size_Mappings(SS_Product_Size_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = this;
		}
		
		private void detach_SS_Product_Size_Mappings(SS_Product_Size_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Product_Category_Mapping")]
	public partial class SS_Product_Category_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _product_id;
		
		private string _cat_id;
		
		private EntityRef<SS_Category> _SS_Category;
		
		private EntityRef<SS_Product> _SS_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void Oncat_idChanging(string value);
    partial void Oncat_idChanged();
    #endregion
		
		public SS_Product_Category_Mapping()
		{
			this._SS_Category = default(EntityRef<SS_Category>);
			this._SS_Product = default(EntityRef<SS_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL")]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._SS_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					if (this._SS_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Category_SS_Product_Category_Mapping", Storage="_SS_Category", ThisKey="cat_id", OtherKey="cat_id", IsForeignKey=true)]
		public SS_Category SS_Category
		{
			get
			{
				return this._SS_Category.Entity;
			}
			set
			{
				SS_Category previousValue = this._SS_Category.Entity;
				if (((previousValue != value) 
							|| (this._SS_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Category.Entity = null;
						previousValue.SS_Product_Category_Mappings.Remove(this);
					}
					this._SS_Category.Entity = value;
					if ((value != null))
					{
						value.SS_Product_Category_Mappings.Add(this);
						this._cat_id = value.cat_id;
					}
					else
					{
						this._cat_id = default(string);
					}
					this.SendPropertyChanged("SS_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Category_Mapping", Storage="_SS_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public SS_Product SS_Product
		{
			get
			{
				return this._SS_Product.Entity;
			}
			set
			{
				SS_Product previousValue = this._SS_Product.Entity;
				if (((previousValue != value) 
							|| (this._SS_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Product.Entity = null;
						previousValue.SS_Product_Category_Mappings.Remove(this);
					}
					this._SS_Product.Entity = value;
					if ((value != null))
					{
						value.SS_Product_Category_Mappings.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("SS_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Product_Color_Image_Mapping")]
	public partial class SS_Product_Color_Image_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _product_id;
		
		private string _color_name;
		
		private string _image_id;
		
		private EntityRef<SS_Product> _SS_Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void Oncolor_nameChanging(string value);
    partial void Oncolor_nameChanged();
    partial void Onimage_idChanging(string value);
    partial void Onimage_idChanged();
    #endregion
		
		public SS_Product_Color_Image_Mapping()
		{
			this._SS_Product = default(EntityRef<SS_Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL")]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._SS_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color_name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string color_name
		{
			get
			{
				return this._color_name;
			}
			set
			{
				if ((this._color_name != value))
				{
					this.Oncolor_nameChanging(value);
					this.SendPropertyChanging();
					this._color_name = value;
					this.SendPropertyChanged("color_name");
					this.Oncolor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string image_id
		{
			get
			{
				return this._image_id;
			}
			set
			{
				if ((this._image_id != value))
				{
					this.Onimage_idChanging(value);
					this.SendPropertyChanging();
					this._image_id = value;
					this.SendPropertyChanged("image_id");
					this.Onimage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Color_Image_Mapping", Storage="_SS_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public SS_Product SS_Product
		{
			get
			{
				return this._SS_Product.Entity;
			}
			set
			{
				SS_Product previousValue = this._SS_Product.Entity;
				if (((previousValue != value) 
							|| (this._SS_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Product.Entity = null;
						previousValue.SS_Product_Color_Image_Mappings.Remove(this);
					}
					this._SS_Product.Entity = value;
					if ((value != null))
					{
						value.SS_Product_Color_Image_Mappings.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("SS_Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Product_Size_Mapping")]
	public partial class SS_Product_Size_Mapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _product_id;
		
		private System.Guid _size_id;
		
		private EntityRef<SS_Product> _SS_Product;
		
		private EntityRef<SS_Size> _SS_Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(long value);
    partial void Onproduct_idChanged();
    partial void Onsize_idChanging(System.Guid value);
    partial void Onsize_idChanged();
    #endregion
		
		public SS_Product_Size_Mapping()
		{
			this._SS_Product = default(EntityRef<SS_Product>);
			this._SS_Size = default(EntityRef<SS_Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="BigInt NOT NULL")]
		public long product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._SS_Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					if (this._SS_Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Product_SS_Product_Size_Mapping", Storage="_SS_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
		public SS_Product SS_Product
		{
			get
			{
				return this._SS_Product.Entity;
			}
			set
			{
				SS_Product previousValue = this._SS_Product.Entity;
				if (((previousValue != value) 
							|| (this._SS_Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Product.Entity = null;
						previousValue.SS_Product_Size_Mappings.Remove(this);
					}
					this._SS_Product.Entity = value;
					if ((value != null))
					{
						value.SS_Product_Size_Mappings.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(long);
					}
					this.SendPropertyChanged("SS_Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Size_SS_Product_Size_Mapping", Storage="_SS_Size", ThisKey="size_id", OtherKey="id", IsForeignKey=true)]
		public SS_Size SS_Size
		{
			get
			{
				return this._SS_Size.Entity;
			}
			set
			{
				SS_Size previousValue = this._SS_Size.Entity;
				if (((previousValue != value) 
							|| (this._SS_Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SS_Size.Entity = null;
						previousValue.SS_Product_Size_Mappings.Remove(this);
					}
					this._SS_Size.Entity = value;
					if ((value != null))
					{
						value.SS_Product_Size_Mappings.Add(this);
						this._size_id = value.id;
					}
					else
					{
						this._size_id = default(System.Guid);
					}
					this.SendPropertyChanged("SS_Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Retailers")]
	public partial class SS_Retailer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private long _retailer_id;
		
		private string _name;
		
		private string _url;
		
		private System.Nullable<bool> _deeplinkSupport;
		
		private EntitySet<SS_Product> _SS_Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onretailer_idChanging(long value);
    partial void Onretailer_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OndeeplinkSupportChanging(System.Nullable<bool> value);
    partial void OndeeplinkSupportChanged();
    #endregion
		
		public SS_Retailer()
		{
			this._SS_Products = new EntitySet<SS_Product>(new Action<SS_Product>(this.attach_SS_Products), new Action<SS_Product>(this.detach_SS_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retailer_id", DbType="BigInt NOT NULL")]
		public long retailer_id
		{
			get
			{
				return this._retailer_id;
			}
			set
			{
				if ((this._retailer_id != value))
				{
					this.Onretailer_idChanging(value);
					this.SendPropertyChanging();
					this._retailer_id = value;
					this.SendPropertyChanged("retailer_id");
					this.Onretailer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(80)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(300)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deeplinkSupport", DbType="Bit")]
		public System.Nullable<bool> deeplinkSupport
		{
			get
			{
				return this._deeplinkSupport;
			}
			set
			{
				if ((this._deeplinkSupport != value))
				{
					this.OndeeplinkSupportChanging(value);
					this.SendPropertyChanging();
					this._deeplinkSupport = value;
					this.SendPropertyChanged("deeplinkSupport");
					this.OndeeplinkSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Retailer_SS_Product", Storage="_SS_Products", ThisKey="retailer_id", OtherKey="retailer_id")]
		public EntitySet<SS_Product> SS_Products
		{
			get
			{
				return this._SS_Products;
			}
			set
			{
				this._SS_Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SS_Products(SS_Product entity)
		{
			this.SendPropertyChanging();
			entity.SS_Retailer = this;
		}
		
		private void detach_SS_Products(SS_Product entity)
		{
			this.SendPropertyChanging();
			entity.SS_Retailer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SS_Size")]
	public partial class SS_Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _size_id;
		
		private string _name;
		
		private string _cat_id;
		
		private EntitySet<SS_Product_Size_Mapping> _SS_Product_Size_Mappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Onsize_idChanging(string value);
    partial void Onsize_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncat_idChanging(string value);
    partial void Oncat_idChanged();
    #endregion
		
		public SS_Size()
		{
			this._SS_Product_Size_Mappings = new EntitySet<SS_Product_Size_Mapping>(new Action<SS_Product_Size_Mapping>(this.attach_SS_Product_Size_Mappings), new Action<SS_Product_Size_Mapping>(this.detach_SS_Product_Size_Mappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size_id", DbType="NVarChar(5)")]
		public string size_id
		{
			get
			{
				return this._size_id;
			}
			set
			{
				if ((this._size_id != value))
				{
					this.Onsize_idChanging(value);
					this.SendPropertyChanging();
					this._size_id = value;
					this.SendPropertyChanged("size_id");
					this.Onsize_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cat_id", DbType="NVarChar(100)")]
		public string cat_id
		{
			get
			{
				return this._cat_id;
			}
			set
			{
				if ((this._cat_id != value))
				{
					this.Oncat_idChanging(value);
					this.SendPropertyChanging();
					this._cat_id = value;
					this.SendPropertyChanged("cat_id");
					this.Oncat_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SS_Size_SS_Product_Size_Mapping", Storage="_SS_Product_Size_Mappings", ThisKey="id", OtherKey="size_id")]
		public EntitySet<SS_Product_Size_Mapping> SS_Product_Size_Mappings
		{
			get
			{
				return this._SS_Product_Size_Mappings;
			}
			set
			{
				this._SS_Product_Size_Mappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SS_Product_Size_Mappings(SS_Product_Size_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Size = this;
		}
		
		private void detach_SS_Product_Size_Mappings(SS_Product_Size_Mapping entity)
		{
			this.SendPropertyChanging();
			entity.SS_Size = null;
		}
	}
}
#pragma warning restore 1591
